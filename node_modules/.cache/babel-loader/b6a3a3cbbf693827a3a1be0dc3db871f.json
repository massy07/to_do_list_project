{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/components/RowList/RowList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SelectProgres } from \"./../SelectProgres\"; //Style Of Component\n\nimport './rowList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RowList = ({\n  item,\n  index,\n  listComplete,\n  setListComplete\n}) => {\n  _s();\n\n  const [showInput, setShowInput] = useState(false);\n  const [elementChainge, setElementChange] = useState(item);\n\n  const deleteRow = index => {\n    const tempList = [...listComplete];\n    tempList.splice(index, 1);\n    setListComplete(tempList);\n  };\n\n  const insertRow = (element, index) => {\n    const tempList = [...listComplete];\n    tempList.splice(index, 1, element);\n    setListComplete(tempList);\n  };\n\n  const updateValue = index => {\n    if (showInput) {\n      insertRow(elementChainge, index);\n    }\n\n    setShowInput(!showInput);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todolist-rowlist\",\n      children: [!showInput && /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"show-row name\",\n        children: [item.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 26\n      }, this), showInput && /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"show-row name input\",\n        type: \"text\",\n        label: elementChainge.name,\n        value: elementChainge.name,\n        onChange: event => setElementChange({ ...elementChainge,\n          name: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this), !showInput && /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"show-row description\",\n        children: [\" \", item.description, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 26\n      }, this), showInput && /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"show-row description input\",\n        type: \"text\",\n        label: elementChainge.description,\n        value: elementChainge.description,\n        onChange: event => setElementChange({ ...elementChainge,\n          description: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-row status input\",\n        children: /*#__PURE__*/_jsxDEV(SelectProgres, {\n          element: elementChainge,\n          setElement: setElementChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"show-row modification\",\n        onClick: () => updateValue(index),\n        children: \" MODIFICATION \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"show-row delete\",\n        onClick: () => deleteRow(index),\n        children: \" DELETE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(RowList, \"FDECMkDd1dSglp2Mkc3K3sXHjTI=\");\n\n_c = RowList;\nexport default _c2 = /*#__PURE__*/React.memo(RowList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RowList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/components/RowList/RowList.jsx"],"names":["React","useState","SelectProgres","RowList","item","index","listComplete","setListComplete","showInput","setShowInput","elementChainge","setElementChange","deleteRow","tempList","splice","insertRow","element","updateValue","name","event","target","value","description","memo"],"mappings":"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","sourcesContent":["import React, {useState}  from \"react\"; \nimport {SelectProgres} from \"./../SelectProgres\";\n \n//Style Of Component\nimport './rowList.scss';\n\nconst RowList = ({ item, index ,listComplete, setListComplete }) => { \n\n\tconst [ showInput, setShowInput ]= useState( false )  \n  const [ elementChainge, setElementChange ]= useState( item )\n\n  const deleteRow = (index) => { \n\t\tconst tempList = [...listComplete];\n\t\ttempList.splice( index, 1) \n\t\tsetListComplete( tempList )\n\t}\n \n  const insertRow = ( element, index ) => {\n\t\tconst tempList = [...listComplete];\n\t\ttempList.splice( index, 1,element) \n\t\tsetListComplete( tempList ) \n  }\n\n  const updateValue = (index) => {\n    if(showInput){ \n      insertRow( elementChainge, index)\n    }\n    setShowInput(!showInput)\n  }\n \n\n  return (\n    <>\n      {\n        <div className=\"todolist-rowlist\">\n          {!showInput&&  <label className=\"show-row name\">{ item.name } </label>}\n          {showInput&& <input className=\"show-row name input\" type=\"text\" label={elementChainge.name} value={elementChainge.name}  onChange={ (event) => setElementChange({ ...elementChainge, name: event.target.value }) } />}\n          {!showInput&&  <label className=\"show-row description\"> { item.description } </label> }\n          {showInput&&  <input className=\"show-row description input\" type=\"text\" label={elementChainge.description} value={elementChainge.description}  onChange={ (event) => setElementChange({ ...elementChainge, description: event.target.value }) } /> }\n          <div className=\"show-row status input\">\n            <SelectProgres element={elementChainge}   setElement={setElementChange}/> \n          </div>\n          <button className=\"show-row modification\" onClick={ () => updateValue (index)} > MODIFICATION </button>\n          <button className=\"show-row delete\" onClick={ () => deleteRow(index)} > DELETE </button>  \n        </div>  \n      }\n    </>\n  )\n}\n\nexport default React.memo(RowList);  \n"]},"metadata":{},"sourceType":"module"}