{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/Components/CreationList/ModificationElement/ModificationElement.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //Style Of Component\n\nimport \"./modificationElement.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModificationElement = ({\n  item,\n  listComplete,\n  setListComplete\n}) => {\n  _s();\n\n  const [modWork, setModWork] = useState({\n    id: item.id,\n    name: item.name,\n    description: item.description,\n    status: item.status\n  });\n\n  const addElement = id => {\n    console.log(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modification-element\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"view-table-name\",\n      children: [\" \", item.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input name\",\n      type: \"text\",\n      label: modWork.description,\n      value: modWork.description,\n      onChange: event => setModWork({ ...listComplete,\n        description: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"view-table-status\",\n      children: [\" \", item.status, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-work modification\",\n      onClick: () => addElement(modWork.id),\n      children: \" OK \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ModificationElement, \"JxX6+t43mU1VtDKlaEEgf8r6Bd4=\");\n\n_c = ModificationElement;\nexport default _c2 = /*#__PURE__*/React.memo(ModificationElement);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModificationElement\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/Components/CreationList/ModificationElement/ModificationElement.jsx"],"names":["React","useState","ModificationElement","item","listComplete","setListComplete","modWork","setModWork","id","name","description","status","addElement","console","log","event","target","value","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;;AACA,OAAO,4BAAP;;;AAGA,MAAMC,mBAAmB,GAAG,CAAE;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAF,KAA8C;AAAA;;AAGzE,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAAyBN,QAAQ,CAAC;AAAEO,IAAAA,EAAE,EAACL,IAAI,CAACK,EAAV;AAAeC,IAAAA,IAAI,EAACN,IAAI,CAACM,IAAzB;AAA+BC,IAAAA,WAAW,EAACP,IAAI,CAACO,WAAhD;AAA6DC,IAAAA,MAAM,EAACR,IAAI,CAACQ;AAAzE,GAAD,CAAvC;;AAEC,QAAMC,UAAU,GAAKJ,EAAF,IAAU;AAC3BK,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AACD,GAFD;;AAID,sBACK;AAAK,IAAA,SAAS,EAAE,sBAAhB;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA,sBAAsCL,IAAI,CAACM,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,KAAK,EAAEH,OAAO,CAACI,WAAzD;AAAsE,MAAA,KAAK,EAAEJ,OAAO,CAACI,WAArF;AAAmG,MAAA,QAAQ,EAAIK,KAAD,IAAWR,UAAU,CAAC,EAAE,GAAGH,YAAL;AAAmBM,QAAAA,WAAW,EAAEK,KAAK,CAACC,MAAN,CAAaC;AAA7C,OAAD;AAAnI;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA,sBAAyCd,IAAI,CAACQ,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAA6C,MAAA,OAAO,EAAG,MAAMC,UAAU,CAACN,OAAO,CAACE,EAAT,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AAUA,CAnBD;;GAAMN,mB;;KAAAA,mB;AAqBN,kCAAeF,KAAK,CAACkB,IAAN,CAAWhB,mBAAX,CAAf","sourcesContent":["import React, {useState} from \"react\";\n\n//Style Of Component\nimport \"./modificationElement.scss\"\n\n\nconst ModificationElement = ( { item, listComplete, setListComplete} ) => {\n\n \n\tconst [ modWork, setModWork ]= useState({ id:item.id , name:item.name, description:item.description, status:item.status })\n  \n  const addElement = ( id ) => {\n    console.log(id)\n  }\n\n\treturn( \n      <div className={\"modification-element\"} >  \n        <label className=\"view-table-name\"> { item.name } </label>\n\n        <input className=\"input name\" type=\"text\" label={modWork.description} value={modWork.description}  onChange={ (event) => setModWork({ ...listComplete, description: event.target.value }) } /> \n\n        <label  className=\"view-table-status\"> { item.status } </label>\n        <button className=\"button-work modification\" onClick={ () => addElement(modWork.id)} > OK </button>  \n      </div> \n  )\n}\n\nexport default React.memo(ModificationElement); "]},"metadata":{},"sourceType":"module"}