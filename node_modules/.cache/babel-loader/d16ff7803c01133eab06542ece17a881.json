{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/Components/ListGenerator/ListGenerator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //Style Of Component\n\nimport './listGenerator.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListGenerator = () => {\n  _s();\n\n  const [addWork, setAddWork] = useState({\n    id: null,\n    name: \"\",\n    description: \"\",\n    status: \"\"\n  });\n  const listComplete = [{\n    id: 0,\n    name: \"massimo\",\n    description: \"creazone lista\",\n    status: \"reiew\"\n  }];\n\n  const addWorkList = () => {\n    setAddWork({ ...addWork,\n      id: listComplete.length\n    });\n    listComplete.concat(addWork);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todolist-listgenerator\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listgenerator-table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listgenerator-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"TO DO LIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"creation-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container name\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title name\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label name\",\n              children: \" assegnazione \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text name\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input name\",\n              type: \"text\",\n              label: addWork.name,\n              value: addWork.name,\n              onChange: event => setAddWork({ ...addWork,\n                name: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title description\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label description\",\n              children: \" descrizione \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text description\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input name\",\n              type: \"text\",\n              label: addWork.description,\n              value: addWork.description,\n              onChange: event => setAddWork({ ...addWork,\n                description: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container status\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title status\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label status\",\n              children: \" progressi \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text status\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input name\",\n              type: \"text\",\n              label: addWork.status,\n              value: addWork.status,\n              onChange: event => setAddWork({ ...addWork,\n                status: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-work-list\",\n        onClick: () => addWorkList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), listComplete.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"view-table-name\",\n            children: [\" \", item.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"view-table-description\",\n            children: [\" \", item.description, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"view-table-status\",\n            children: [\" \", item.status, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this)]\n        }, item.name + \" \" + index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 8\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ListGenerator, \"8JxUz21PAVRk9g+Yf/bf1BKIHTA=\");\n\n_c = ListGenerator;\nListGenerator.propTypes = {};\nListGenerator.defaultProps = {};\nexport default _c2 = /*#__PURE__*/React.memo(ListGenerator);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListGenerator\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/Components/ListGenerator/ListGenerator.jsx"],"names":["React","useState","ListGenerator","addWork","setAddWork","id","name","description","status","listComplete","addWorkList","length","concat","event","target","value","map","item","index","propTypes","defaultProps","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA4B,OAA5B,C,CAEA;;AACA,OAAO,sBAAP;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAAyBH,QAAQ,CAAC;AAAEI,IAAAA,EAAE,EAAC,IAAL;AAAWC,IAAAA,IAAI,EAAC,EAAhB;AAAoBC,IAAAA,WAAW,EAAC,EAAhC;AAAoCC,IAAAA,MAAM,EAAC;AAA3C,GAAD,CAAvC;AAEA,QAAMC,YAAY,GAAC,CAAC;AACnBJ,IAAAA,EAAE,EAAC,CADgB;AAEnBC,IAAAA,IAAI,EAAC,SAFc;AAGnBC,IAAAA,WAAW,EAAC,gBAHO;AAInBC,IAAAA,MAAM,EAAC;AAJY,GAAD,CAAnB;;AAOA,QAAME,WAAW,GAAG,MAAM;AACzBN,IAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcE,MAAAA,EAAE,EAACI,YAAY,CAACE;AAA9B,KAAD,CAAV;AACAF,IAAAA,YAAY,CAACG,MAAb,CAAoBT,OAApB;AACA,GAHD;;AAOA,sBACC;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,8BACC;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,eAKC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACC;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACC;AAAO,cAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACC;AAAO,cAAA,SAAS,EAAC,YAAjB;AAA8B,cAAA,IAAI,EAAC,MAAnC;AAA0C,cAAA,KAAK,EAAEA,OAAO,CAACG,IAAzD;AAA+D,cAAA,KAAK,EAAEH,OAAO,CAACG,IAA9E;AAAqF,cAAA,QAAQ,EAAIO,KAAD,IAAWT,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcG,gBAAAA,IAAI,EAAEO,KAAK,CAACC,MAAN,CAAaC;AAAjC,eAAD;AAArH;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAUC;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACC;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,mCACC;AAAO,cAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACC;AAAO,cAAA,SAAS,EAAC,YAAjB;AAA8B,cAAA,IAAI,EAAC,MAAnC;AAA0C,cAAA,KAAK,EAAEZ,OAAO,CAACI,WAAzD;AAAsE,cAAA,KAAK,EAAEJ,OAAO,CAACI,WAArF;AAAmG,cAAA,QAAQ,EAAIM,KAAD,IAAWT,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcI,gBAAAA,WAAW,EAAEM,KAAK,CAACC,MAAN,CAAaC;AAAxC,eAAD;AAAnI;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVD,eAmBC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACC;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACC;AAAO,cAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACC;AAAO,cAAA,SAAS,EAAC,YAAjB;AAA8B,cAAA,IAAI,EAAC,MAAnC;AAA0C,cAAA,KAAK,EAAEZ,OAAO,CAACK,MAAzD;AAAiE,cAAA,KAAK,EAAEL,OAAO,CAACK,MAAhF;AAAyF,cAAA,QAAQ,EAAIK,KAAD,IAAWT,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcK,gBAAAA,MAAM,EAAEK,KAAK,CAACC,MAAN,CAAaC;AAAnC,eAAD;AAAzH;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBD;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,eAiCC;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAoC,QAAA,OAAO,EAAG,MAAIL,WAAW;AAA7D;AAAA;AAAA;AAAA;AAAA,cAjCD,EAmCED,YAAY,CAACO,GAAb,CAAkB,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACjC,4BACC;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACC;AAAO,YAAA,SAAS,EAAC,iBAAjB;AAAA,4BAAsCD,IAAI,CAACX,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAO,YAAA,SAAS,EAAC,wBAAjB;AAAA,4BAA6CW,IAAI,CAACV,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAA,4BAAyCU,IAAI,CAACT,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA,WAAiCS,IAAI,CAACX,IAAL,GAAU,GAAV,GAAcY,KAA/C;AAAA;AAAA;AAAA;AAAA,gBADD;AAOA,OARD,CAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAoDA,CAtED;;GAAMhB,a;;KAAAA,a;AAwENA,aAAa,CAACiB,SAAd,GAA0B,EAA1B;AAGAjB,aAAa,CAACkB,YAAd,GAA6B,EAA7B;AAMA,kCAAepB,KAAK,CAACqB,IAAN,CAAWnB,aAAX,CAAf","sourcesContent":["import React,{useState}from \"react\"; \n\n//Style Of Component\nimport './listGenerator.scss';\n\nconst ListGenerator = () => {\n \n\tconst [ addWork, setAddWork ]= useState({ id:null, name:\"\", description:\"\", status:\"\" })\n\n\tconst listComplete=[{\n\t\tid:0,\n\t\tname:\"massimo\",\n\t\tdescription:\"creazone lista\",\n\t\tstatus:\"reiew\", \n\t}] \n\n\tconst addWorkList = () => { \n\t\tsetAddWork({ ...addWork, id:listComplete.length }) \n\t\tlistComplete.concat(addWork)\n\t}\n\n\t\n\n\treturn(\n\t\t<div className=\"todolist-listgenerator\">\n\t\t\t<div className=\"listgenerator-table-container\">  \n\t\t\t\t<div  className=\"listgenerator-title\" >\n\t\t\t\t\t\t<h1>TO DO LIST</h1>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"creation-table\" >  \n\t\t\t\t\t<div className=\"container name\"> \n\t\t\t\t\t\t<div className=\"title name\"> \n\t\t\t\t\t\t\t<label className=\"label name\"> assegnazione </label>\n\t\t\t\t\t\t</div>  \n\t\t\t\t\t\t<div className=\"text name\">  \n\t\t\t\t\t\t\t<input className=\"input name\" type=\"text\" label={addWork.name} value={addWork.name}  onChange={ (event) => setAddWork({ ...addWork, name: event.target.value }) } />\n\t\t\t\t\t\t</div> \n\t\t\t\t\t</div>     \n\n\t\t\t\t\t<div className=\"container description\"> \n\t\t\t\t\t\t<div className=\"title description\"> \n\t\t\t\t\t\t\t<label className=\"label description\"> descrizione </label>\n\t\t\t\t\t\t</div>  \n\t\t\t\t\t\t<div className=\"text description\">\n\t\t\t\t\t\t\t<input className=\"input name\" type=\"text\" label={addWork.description} value={addWork.description}  onChange={ (event) => setAddWork({ ...addWork, description: event.target.value }) } /> \n\t\t\t\t\t\t</div> \n\t\t\t\t\t</div>  \n\n\t\t\t\t\t<div className=\"container status\"> \n\t\t\t\t\t\t<div className=\"title status\"> \n\t\t\t\t\t\t\t<label className=\"label status\"> progressi </label>\n\t\t\t\t\t\t</div>  \n\t\t\t\t\t\t<div className=\"text status\">   \n\t\t\t\t\t\t\t<input className=\"input name\" type=\"text\" label={addWork.status} value={addWork.status}  onChange={ (event) => setAddWork({ ...addWork, status: event.target.value }) } /> \n\t\t\t\t\t\t</div> \n\t\t\t\t\t</div>  \n\t\t\t\t</div>  \n\t\t\t\t<button className=\"send-work-list\"  onClick={ ()=>addWorkList() }></button>\n\n\t\t\t\t{listComplete.map( (item,index) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<div className=\"view-table\" key={item.name+\" \"+index} >\n\t\t\t\t\t\t\t\t<label className=\"view-table-name\"> { item.name } </label>\n\t\t\t\t\t\t\t\t<label className=\"view-table-description\"> { item.description } </label>\n\t\t\t\t\t\t\t\t<label  className=\"view-table-status\"> { item.status } </label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\t)} \n\t\t\t\n\t\t\t</div> \n\t\t</div>\n\t)\n}\n\nListGenerator.propTypes = { \n}; \n\nListGenerator.defaultProps = { \n};\n\n  \n\n\nexport default React.memo(ListGenerator);\n"]},"metadata":{},"sourceType":"module"}