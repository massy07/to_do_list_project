{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/Components/ListGenerator/AddingElement/AddingElement.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //Style Of Component\n\nimport './addingElement.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddingElement = ({\n  listComplete,\n  setListComplete\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [addWork, setAddWork] = useState({\n    id: null,\n    name: \"\",\n    description: \"\",\n    status: \"\"\n  });\n\n  const addWorkList = () => {\n    _s();\n\n    const [dataPhase, setDataPhase] = useState([{\n      phaseID: 1,\n      phaseText: \"Item 1\"\n    }, {\n      phaseID: 2,\n      phaseText: \"Item 2\"\n    }, {\n      phaseID: 3,\n      phaseText: \"Item 3\"\n    }, {\n      phaseID: 4,\n      phaseText: \"Item 4\"\n    }, {\n      phaseID: 5,\n      phaseText: \"Item 5\"\n    }]);\n    setAddWork({ ...addWork,\n      id: listComplete.length\n    });\n    console.log(document.getElementById('list-progress'));\n    const newList = [...listComplete];\n    newList.push(addWork);\n    setListComplete(newList);\n  };\n\n  _s(addWorkList, \"UgEQaZY4Iz99V9Fr7ukPEw/kRU8=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adding-element-creation\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container name\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title name\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label name\",\n            children: \" assegnazione \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text name\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input name\",\n            type: \"text\",\n            label: addWork.name,\n            value: addWork.name,\n            onChange: event => setAddWork({ ...addWork,\n              name: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container description\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title description\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label description\",\n            children: \" descrizione \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text description\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input name\",\n            type: \"text\",\n            label: addWork.description,\n            value: addWork.description,\n            onChange: event => setAddWork({ ...addWork,\n              description: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title status\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label status\",\n            children: \" progressi \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              options: dataPhase,\n              id: \"list-progress\",\n              value: \"null\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"BACKLOG\",\n                children: \"BACKLOG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"TODO\",\n                children: \"TODO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"IN PROGRESS\",\n                children: \"IN PROGRESS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"COMPLETED\",\n                children: \"COMPLETED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"IN REVIEW\",\n                children: \"IN REVIEW\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"CLOSED\",\n                children: \"CLOSED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-work-list\",\n        onClick: () => addWorkList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AddingElement, \"0ehjfkDQEtBS0aWskw7QjLEVTrE=\");\n\n_c = AddingElement;\nexport default _c2 = /*#__PURE__*/React.memo(AddingElement);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddingElement\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/Components/ListGenerator/AddingElement/AddingElement.jsx"],"names":["React","useState","AddingElement","listComplete","setListComplete","addWork","setAddWork","id","name","description","status","addWorkList","dataPhase","setDataPhase","phaseID","phaseText","length","console","log","document","getElementById","newList","push","event","target","value","memo"],"mappings":"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","sourcesContent":["import React,{useState}from \"react\"; \n\n//Style Of Component\nimport './addingElement.scss';\n\nconst AddingElement = ( {listComplete, setListComplete} ) => {\n\n\n\tconst [ addWork, setAddWork ]= useState({ id:null , name:\"\", description:\"\", status:\"\" })\n \n\n\tconst addWorkList = () => { \n\n    const [dataPhase, setDataPhase] = useState([\n      { phaseID: 1, phaseText: \"Item 1\" },\n      { phaseID: 2, phaseText: \"Item 2\" },\n      { phaseID: 3, phaseText: \"Item 3\" },\n      { phaseID: 4, phaseText: \"Item 4\" },\n      { phaseID: 5, phaseText: \"Item 5\" }\n    ]);\n\n\t\tsetAddWork({ ...addWork, id:listComplete.length }) \n\n    console.log(document.getElementById('list-progress'))\n\n    \n\n\t\tconst newList = [...listComplete];\n\t\tnewList.push(addWork)\n\t\tsetListComplete( newList )\n\t} \n\n  return(\n    <> \n      <div className=\"adding-element-creation\" >  \n        <div className=\"container name\"> \n          <div className=\"title name\"> \n            <label className=\"label name\"> assegnazione </label>\n          </div>  \n          <div className=\"text name\">  \n            <input className=\"input name\" type=\"text\" label={addWork.name} value={addWork.name}  onChange={ (event) => setAddWork({ ...addWork, name: event.target.value }) } />\n          </div> \n        </div>      \n        <div className=\"container description\"> \n          <div className=\"title description\"> \n            <label className=\"label description\"> descrizione </label>\n          </div>  \n          <div className=\"text description\">\n            <input className=\"input name\" type=\"text\" label={addWork.description} value={addWork.description}  onChange={ (event) => setAddWork({ ...addWork, description: event.target.value }) } /> \n          </div> \n        </div>   \n        <div className=\"container status\"> \n          <div className=\"title status\"> \n            <label className=\"label status\"> progressi </label>\n          </div>   \n          <div className=\"text status\">    \n            <div className=\"custom-select\" >\n              <select  options={dataPhase}  id=\"list-progress\" value=\"null\"> \n                <option value=\"BACKLOG\">BACKLOG</option>\n                <option value=\"TODO\">TODO</option>\n                <option value=\"IN PROGRESS\">IN PROGRESS</option>\n                <option value=\"COMPLETED\">COMPLETED</option>\n                <option value=\"IN REVIEW\">IN REVIEW</option>\n                <option value=\"CLOSED\">CLOSED</option> \n              </select>\n            </div>\n          </div> \n        </div>  \n        <button className=\"send-work-list\"  onClick={ ()=>addWorkList() }></button>\n      </div>  \n    </>\n  )\n}\n \nexport default React.memo(AddingElement);\n"]},"metadata":{},"sourceType":"module"}