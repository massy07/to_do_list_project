{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/components/RowList/RowList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SelectProgres } from \"./../SelectProgres\"; //Style Of Component\n\nimport './rowList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RowList = ({\n  item,\n  index,\n  listComplete,\n  setListComplete\n}) => {\n  _s();\n\n  const [modificationElemntView, setModificationElemntView] = useState(false);\n  const [elementChainge, setElementChange] = useState(item);\n\n  const deleteElement = index => {\n    const newList = [...listComplete];\n    newList.splice(index, 1);\n    setListComplete(newList);\n  };\n\n  const insertList = (element, index) => {\n    const newList = [...listComplete];\n    newList.splice(index, 1, element);\n    setListComplete(newList);\n    setModificationElemntView(-1);\n  };\n\n  const terzaFunzione = index => {\n    if (modificationElemntView) {\n      insertList(elementChainge, index);\n    }\n\n    setModificationElemntView(!modificationElemntView);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todolist-rowlist\",\n      children: [!modificationElemntView && /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"view-table name\",\n        children: [item.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 39\n      }, this), modificationElemntView && /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"view-table name input\",\n        type: \"text\",\n        label: elementChainge.name,\n        value: elementChainge.name,\n        onChange: event => setElementChange({ ...elementChainge,\n          name: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 37\n      }, this), !modificationElemntView && /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"view-table description\",\n        children: [\" \", item.description, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 39\n      }, this), modificationElemntView && /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"view-table description input\",\n        type: \"text\",\n        label: elementChainge.description,\n        value: elementChainge.description,\n        onChange: event => setElementChange({ ...elementChainge,\n          description: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(SelectProgres, {\n        element: elementChainge,\n        setElement: setElementChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"view-table modification\",\n        onClick: () => terzaFunzione(index),\n        children: \" MODIFICATION \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"view-table delete\",\n        onClick: () => deleteElement(index),\n        children: \" DELETE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(RowList, \"hTjewVzCinp5PBA69Rxns/qYN5Q=\");\n\n_c = RowList;\nexport default _c2 = /*#__PURE__*/React.memo(RowList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RowList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/components/RowList/RowList.jsx"],"names":["React","useState","SelectProgres","RowList","item","index","listComplete","setListComplete","modificationElemntView","setModificationElemntView","elementChainge","setElementChange","deleteElement","newList","splice","insertList","element","terzaFunzione","name","event","target","value","description","memo"],"mappings":"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","sourcesContent":["import React, {useState}  from \"react\"; \nimport {SelectProgres} from \"./../SelectProgres\";\n \n//Style Of Component\nimport './rowList.scss';\n\nconst RowList = ({ item, index ,listComplete, setListComplete }) => { \n\n\tconst [modificationElemntView,setModificationElemntView]=useState( false) \n\n  const [ elementChainge, setElementChange ]= useState( item )\n\n  const deleteElement = (index) => { \n\t\tconst newList = [...listComplete];\n\t\tnewList.splice( index, 1) \n\t\tsetListComplete( newList )\n\t}\n \n  const insertList = ( element, index ) => {\n\t\tconst newList = [...listComplete];\n\t\tnewList.splice( index, 1,element) \n\t\tsetListComplete( newList )\n    setModificationElemntView(-1)\n  }\n\n  const terzaFunzione = (index,) => {\n    if(modificationElemntView){ \n      insertList( elementChainge, index)\n    }\n    setModificationElemntView(!modificationElemntView)\n  }\n \n\n\n\n  return (\n    <>\n      {\n        <div className=\"todolist-rowlist\">\n          {!modificationElemntView&&  <label className=\"view-table name\">{ item.name } </label>}\n          {modificationElemntView&& <input className=\"view-table name input\" type=\"text\" label={elementChainge.name} value={elementChainge.name}  onChange={ (event) => setElementChange({ ...elementChainge, name: event.target.value }) } />}\n          {!modificationElemntView&&  <label className=\"view-table description\"> { item.description } </label> }\n          {modificationElemntView&&  <input className=\"view-table description input\" type=\"text\" label={elementChainge.description} value={elementChainge.description}  onChange={ (event) => setElementChange({ ...elementChainge, description: event.target.value }) } /> }\n          <SelectProgres element={elementChainge}   setElement={setElementChange}/> \n        <button className=\"view-table modification\" onClick={ () => terzaFunzione(index)} > MODIFICATION </button>\n        <button className=\"view-table delete\" onClick={ () => deleteElement(index)} > DELETE </button>  \n        </div>  \n      }\n    </>\n  )\n}\n\nexport default React.memo(RowList);  \n"]},"metadata":{},"sourceType":"module"}