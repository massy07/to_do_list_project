{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/components/AddingElement/AddingElement.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //Style Of Component\n\nimport './addingElement.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddingElement = ({\n  listComplete,\n  setListComplete\n}) => {\n  _s();\n\n  const [addWork, setAddWork] = useState({\n    id: null,\n    name: \"\",\n    description: \"\",\n    status: \"\"\n  });\n\n  const addWorkList = () => {\n    setAddWork({ ...addWork,\n      id: listComplete.length\n    });\n    const newList = [...listComplete];\n    newList.push(addWork);\n    setListComplete(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adding-element-creation\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container name\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label name\",\n          children: \" assegnazione \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input name\",\n          type: \"text\",\n          label: addWork.name,\n          value: addWork.name,\n          onChange: event => setAddWork({ ...addWork,\n            name: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container description\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label description\",\n          children: \" descrizione \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input name\",\n          type: \"text\",\n          label: addWork.description,\n          value: addWork.description,\n          onChange: event => setAddWork({ ...addWork,\n            description: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container status\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label status\",\n          children: \" progressi \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"list-progress\",\n          value: addWork.status,\n          onChange: event => setAddWork({ ...addWork,\n            status: event.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BACKLOG\",\n            children: \"backlog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"TODO\",\n            children: \"to do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"IN PROGRESS\",\n            children: \"in progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"IN REVIEW\",\n            children: \"in review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"COMPLETED\",\n            children: \"completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CLOSED\",\n            children: \"closed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-work-list\",\n        onClick: () => addWorkList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddingElement, \"0ehjfkDQEtBS0aWskw7QjLEVTrE=\");\n\n_c = AddingElement;\nexport default _c2 = /*#__PURE__*/React.memo(AddingElement);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddingElement\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/components/AddingElement/AddingElement.jsx"],"names":["React","useState","AddingElement","listComplete","setListComplete","addWork","setAddWork","id","name","description","status","addWorkList","length","newList","push","event","target","value","memo"],"mappings":"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","sourcesContent":["import React,{useState}from \"react\"; \n\n//Style Of Component\nimport './addingElement.scss';\n\nconst AddingElement = ( {listComplete, setListComplete} ) => {\n\n\tconst [ addWork, setAddWork ]= useState({ id:null , name:\"\", description:\"\", status:\"\" })\n \n\tconst addWorkList = () => {  \n\t\tsetAddWork({ ...addWork, id:listComplete.length  })    \n\t\tconst newList = [...listComplete];\n\t\tnewList.push(addWork)\n\t\tsetListComplete( newList )\n\t} \n\n  return(\n    <> \n      <div className=\"adding-element-creation\" >  \n        <div className=\"container name\">  \n            <label className=\"label name\"> assegnazione </label>  \n            <input className=\"input name\" type=\"text\" label={addWork.name} value={addWork.name}  onChange={ (event) => setAddWork({ ...addWork, name: event.target.value }) } /> \n        </div>      \n        <div className=\"container description\">  \n            <label className=\"label description\"> descrizione </label> \n            <input className=\"input name\" type=\"text\" label={addWork.description} value={addWork.description}  onChange={ (event) => setAddWork({ ...addWork, description: event.target.value }) } />  \n        </div>   \n        <div className=\"container status\">  \n            <label className=\"label status\"> progressi </label>  \n            <select id=\"list-progress\" value={ addWork.status } onChange={ (event) => setAddWork({ ...addWork, status: event.target.value }) }> \n              <option value=\"BACKLOG\">backlog</option>\n              <option value=\"TODO\">to do</option>\n              <option value=\"IN PROGRESS\">in progress</option>\n              <option value=\"IN REVIEW\">in review</option>\n              <option value=\"COMPLETED\">completed</option>\n              <option value=\"CLOSED\">closed</option> \n            </select> \n        </div>  \n        <button className=\"send-work-list\"  onClick={ ()=>addWorkList() }></button>\n      </div>  \n    </>\n  )\n}\n \nexport default React.memo(AddingElement);\n"]},"metadata":{},"sourceType":"module"}