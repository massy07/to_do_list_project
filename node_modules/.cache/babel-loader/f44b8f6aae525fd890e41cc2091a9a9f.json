{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/views/ToDoListView/ToDoListView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AddingElement } from \"../../components/AddingElement\";\nimport { ModificationElement } from \"../../components/ModificationElement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoListView = () => {\n  _s();\n\n  const [listComplete, setListComplete] = useState([]);\n  const [modificationElemntView, setModificationElemntView] = useState(-1);\n  const [modWork, setModWork] = useState({});\n\n  const deleteElement = index => {\n    const newList = [...listComplete];\n    newList.splice(index, 1);\n    setListComplete(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"creationlist-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TO DO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AddingElement, {\n      listComplete: listComplete,\n      setListComplete: setListComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), listComplete.map((item, index) => {\n      modificationElemntView !== index ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todolist-list-generator\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"view-table-name\",\n          children: [item.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"view-table-description\",\n          children: [\" \", item.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"view-table-status\",\n          children: [\" \", item.status, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-work delete\",\n          onClick: () => deleteElement(index),\n          children: \" DELETE \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-work modification\",\n          onClick: () => setModificationElemntView(index),\n          children: \" MODIFICATION \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(ModificationElement, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDoListView, \"FQU3FU1Wn99hF8xCmWdr8e0gBIA=\");\n\n_c = ToDoListView;\nexport default _c2 = /*#__PURE__*/React.memo(ToDoListView);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToDoListView\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/views/ToDoListView/ToDoListView.jsx"],"names":["React","useState","AddingElement","ModificationElement","ToDoListView","listComplete","setListComplete","modificationElemntView","setModificationElemntView","modWork","setModWork","deleteElement","index","newList","splice","map","item","name","description","status","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,aAAR,QAA4B,gCAA5B;AACA,SAAQC,mBAAR,QAAkC,sCAAlC;;;AAGA,MAAMC,YAAY,GAAG,MAAO;AAAA;;AAE3B,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAgCL,QAAQ,CAAE,EAAF,CAA9C;AACA,QAAM,CAACM,sBAAD,EAAwBC,yBAAxB,IAAmDP,QAAQ,CAAC,CAAC,CAAF,CAAjE;AACA,QAAM,CAAEQ,OAAF,EAAWC,UAAX,IAAyBT,QAAQ,CAAE,EAAF,CAAvC;;AAEC,QAAMU,aAAa,GAAIC,KAAD,IAAW;AACjC,UAAMC,OAAO,GAAG,CAAC,GAAGR,YAAJ,CAAhB;AACAQ,IAAAA,OAAO,CAACC,MAAR,CAAgBF,KAAhB,EAAuB,CAAvB;AACAN,IAAAA,eAAe,CAAEO,OAAF,CAAf;AACA,GAJA;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACA;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,aAAD;AAAe,MAAA,YAAY,EAAER,YAA7B;AAA2C,MAAA,eAAe,EAAEC;AAA5D;AAAA;AAAA;AAAA;AAAA,YAJA,EAMMD,YAAY,CAACU,GAAb,CAAkB,CAACC,IAAD,EAAMJ,KAAN,KAAgB;AAChCL,MAAAA,sBAAsB,KAAGK,KAAzB,gBACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,iBAAjB;AAAA,qBAAqCI,IAAI,CAACC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,SAAS,EAAC,wBAAjB;AAAA,0BAA6CD,IAAI,CAACE,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA,0BAAyCF,IAAI,CAACG,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAuC,UAAA,OAAO,EAAG,MAAMR,aAAa,CAACC,KAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAQ,UAAA,SAAS,EAAC,0BAAlB;AAA6C,UAAA,OAAO,EAAG,MAAMJ,yBAAyB,CAACI,KAAD,CAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,gBAQI,QAAC,mBAAD;AAAqB,QAAA,IAAI,EAAEI;AAA3B;AAAA;AAAA;AAAA;AAAA,cARJ;AASD,KAVD,CANN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAnCD;;GAAMZ,Y;;KAAAA,Y;AAoCN,kCAAeJ,KAAK,CAACoB,IAAN,CAAWhB,YAAX,CAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {AddingElement} from \"../../components/AddingElement\";\nimport {ModificationElement} from \"../../components/ModificationElement\";\n\n\nconst ToDoListView = ( ) => {\n \n\tconst [listComplete,setListComplete ]=useState( [ ] )\n\tconst [modificationElemntView,setModificationElemntView]=useState(-1 )\n\tconst [ modWork, setModWork ]= useState( {} )\n\n  const deleteElement = (index) => { \n\t\tconst newList = [...listComplete];\n\t\tnewList.splice( index, 1) \n\t\tsetListComplete( newList )\n\t}\n \n  \n\n  return (\n    <div className=\"todo-list-view\">  \n\t\t\t\t<div  className=\"creationlist-title\" >\n\t\t\t\t\t\t<h1>TO DO LIST</h1>\n\t\t\t\t</div>\n\t\t\t\t<AddingElement listComplete={listComplete} setListComplete={setListComplete} />  \n        { \n          listComplete.map( (item,index) => {\n            modificationElemntView!==index\n              ? <div className=\"todolist-list-generator\">\n                  <label className=\"view-table-name\">{ item.name } </label>\n                  <label className=\"view-table-description\"> { item.description } </label> \n                  <label  className=\"view-table-status\"> { item.status } </label>\n                  <button className=\"button-work delete\" onClick={ () => deleteElement(index)} > DELETE </button> \n                  <button className=\"button-work modification\" onClick={ () => setModificationElemntView(index)} > MODIFICATION </button> \n                </div> \n              : <ModificationElement item={item}/>\n          })\n\t\t\t  } \n    </div>\n  ); \n}\nexport default React.memo(ToDoListView); "]},"metadata":{},"sourceType":"module"}