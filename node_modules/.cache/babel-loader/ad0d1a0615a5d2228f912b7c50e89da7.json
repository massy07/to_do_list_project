{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/components/CreationRow/CreationRow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SelectProgres } from \"../SelectProgres\"; //Style Of Component\n\nimport './creationRow.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreationRow = ({\n  listComplete,\n  setListComplete\n}) => {\n  _s();\n\n  const [addWork, setAddWork] = useState({\n    id: null,\n    name: \"\",\n    description: \"\",\n    status: \"BACKLOG\"\n  });\n\n  const addWorkList = () => {\n    setAddWork({ ...addWork,\n      id: listComplete.length\n    });\n    const newList = [...listComplete];\n    newList.push(addWork);\n    setListComplete(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todolist-creationrow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"creationrow-container name\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label name\",\n          children: \" Assegnazione \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input name\",\n          type: \"text\",\n          label: addWork.name,\n          value: addWork.name,\n          onChange: event => setAddWork({ ...addWork,\n            name: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"creationrow-container description\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label description\",\n          children: \" Descrizione \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input name\",\n          type: \"text\",\n          label: addWork.description,\n          value: addWork.description,\n          onChange: event => setAddWork({ ...addWork,\n            description: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectProgres, {\n        element: addWork,\n        setElement: setAddWork\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"creationrow-container button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"creationrow-send-work-list\",\n          onClick: () => addWorkList(),\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreationRow, \"fRtElO4sNszu3j3gHn+giQwGGNc=\");\n\n_c = CreationRow;\nexport default _c2 = /*#__PURE__*/React.memo(CreationRow);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreationRow\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/components/CreationRow/CreationRow.jsx"],"names":["React","useState","SelectProgres","CreationRow","listComplete","setListComplete","addWork","setAddWork","id","name","description","status","addWorkList","length","newList","push","event","target","value","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA4B,OAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CAGA;;AACA,OAAO,oBAAP;;;;AAEA,MAAMC,WAAW,GAAG,CAAE;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAF,KAAuC;AAAA;;AAE1D,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAAyBN,QAAQ,CAAC;AAAEO,IAAAA,EAAE,EAAC,IAAL;AAAYC,IAAAA,IAAI,EAAC,EAAjB;AAAqBC,IAAAA,WAAW,EAAC,EAAjC;AAAqCC,IAAAA,MAAM,EAAC;AAA5C,GAAD,CAAvC;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACzBL,IAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcE,MAAAA,EAAE,EAACJ,YAAY,CAACS;AAA9B,KAAD,CAAV;AACA,UAAMC,OAAO,GAAG,CAAC,GAAGV,YAAJ,CAAhB;AACAU,IAAAA,OAAO,CAACC,IAAR,CAAaT,OAAb;AACAD,IAAAA,eAAe,CAAES,OAAF,CAAf;AACA,GALD;;AAOC,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,IAAI,EAAC,MAAnC;AAA0C,UAAA,KAAK,EAAER,OAAO,CAACG,IAAzD;AAA+D,UAAA,KAAK,EAAEH,OAAO,CAACG,IAA9E;AAAqF,UAAA,QAAQ,EAAIO,KAAD,IAAWT,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcG,YAAAA,IAAI,EAAEO,KAAK,CAACC,MAAN,CAAaC;AAAjC,WAAD;AAArH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,IAAI,EAAC,MAAnC;AAA0C,UAAA,KAAK,EAAEZ,OAAO,CAACI,WAAzD;AAAsE,UAAA,KAAK,EAAEJ,OAAO,CAACI,WAArF;AAAmG,UAAA,QAAQ,EAAIM,KAAD,IAAWT,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcI,YAAAA,WAAW,EAAEM,KAAK,CAACC,MAAN,CAAaC;AAAxC,WAAD;AAAnI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEZ,OAAxB;AAAiC,QAAA,UAAU,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAM,QAAA,SAAS,EAAC,8BAAhB;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,4BAAlB;AAAgD,UAAA,OAAO,EAAG,MAAIK,WAAW,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD,CA7BD;;GAAMT,W;;KAAAA,W;AA+BN,kCAAeH,KAAK,CAACmB,IAAN,CAAWhB,WAAX,CAAf","sourcesContent":["import React,{useState}from \"react\"; \nimport { SelectProgres } from \"../SelectProgres\";\n\n\n//Style Of Component\nimport './creationRow.scss';\n\nconst CreationRow = ( {listComplete, setListComplete} ) => {\n\n\tconst [ addWork, setAddWork ]= useState({ id:null , name:\"\", description:\"\", status:\"BACKLOG\" })\n \n\tconst addWorkList = () => {  \n\t\tsetAddWork({ ...addWork, id:listComplete.length  })    \n\t\tconst newList = [...listComplete];\n\t\tnewList.push(addWork)\n\t\tsetListComplete( newList )\n\t} \n\n  return(\n    <> \n      <div className=\"todolist-creationrow\" >  \n        <div className=\"creationrow-container name\">  \n            <label className=\"label name\"> Assegnazione </label>  \n            <input className=\"input name\" type=\"text\" label={addWork.name} value={addWork.name}  onChange={ (event) => setAddWork({ ...addWork, name: event.target.value }) } /> \n        </div>      \n        <div className=\"creationrow-container description\">  \n            <label className=\"label description\"> Descrizione </label> \n            <input className=\"input name\" type=\"text\" label={addWork.description} value={addWork.description}  onChange={ (event) => setAddWork({ ...addWork, description: event.target.value }) } />  \n        </div>  \n        <SelectProgres element={addWork} setElement={setAddWork} /> \n        <div  className=\"creationrow-container button\">\n          <button className=\"creationrow-send-work-list\"  onClick={ ()=>addWorkList() }>SUBMIT</button>\n        </div>\n      </div>  \n    </>\n  )\n}\n \nexport default React.memo(CreationRow);\n"]},"metadata":{},"sourceType":"module"}