{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/components/ModificationElement/ModificationElement.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //Style Of Component\n\nimport \"./modificationElement.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModificationElement = ({\n  item,\n  insertList\n}) => {\n  _s();\n\n  const [prova, setProva] = useState(item);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modification-element\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input name\",\n      type: \"text\",\n      label: prova.name,\n      value: prova.name,\n      onChange: event => setProva({ ...prova,\n        name: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input name\",\n      type: \"text\",\n      label: prova.description,\n      value: prova.description,\n      onChange: event => setProva({ ...prova,\n        description: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-select\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"list-progress\",\n        value: prova.status,\n        onChange: event => setProva({ ...prova,\n          status: event.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"BACKLOG\",\n          children: \"backlog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"TODO\",\n          children: \"to do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IN PROGRESS\",\n          children: \"in progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COMPLETED\",\n          children: \"completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IN REVIEW\",\n          children: \"in review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CLOSED\",\n          children: \"closed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"send-work-list\",\n      onClick: () => insertList(prova)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ModificationElement, \"h7bwSAzNJuAyX2uYv6+Z4F+HmbE=\");\n\n_c = ModificationElement;\nexport default _c2 = /*#__PURE__*/React.memo(ModificationElement);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModificationElement\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/components/ModificationElement/ModificationElement.jsx"],"names":["React","useState","ModificationElement","item","insertList","prova","setProva","name","event","target","value","description","status","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;;AACA,OAAO,4BAAP;;;AAEA,MAAMC,mBAAmB,GAAG,CAAE;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAF,KAA2B;AAAA;;AAErD,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAqBL,QAAQ,CAAEE,IAAF,CAAnC;AAGD,sBACK;AAAK,IAAA,SAAS,EAAE,sBAAhB;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,KAAK,EAAEE,KAAK,CAACE,IAAvD;AAA6D,MAAA,KAAK,EAAEF,KAAK,CAACE,IAA1E;AAAiF,MAAA,QAAQ,EAAIC,KAAD,IAAWF,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYE,QAAAA,IAAI,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAA/B,OAAD;AAA/G;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,KAAK,EAAEL,KAAK,CAACM,WAAvD;AAAoE,MAAA,KAAK,EAAEN,KAAK,CAACM,WAAjF;AAA+F,MAAA,QAAQ,EAAIH,KAAD,IAAWF,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYM,QAAAA,WAAW,EAAEH,KAAK,CAACC,MAAN,CAAaC;AAAtC,OAAD;AAA7H;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AAAQ,QAAA,EAAE,EAAC,eAAX;AAA2B,QAAA,KAAK,EAAGL,KAAK,CAACO,MAAzC;AAAkD,QAAA,QAAQ,EAAIJ,KAAD,IAAWF,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYO,UAAAA,MAAM,EAAEJ,KAAK,CAACC,MAAN,CAAaC;AAAjC,SAAD,CAAhF;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAQ,UAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAaE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAoC,MAAA,OAAO,EAAG,MAAKN,UAAU,CAACC,KAAD;AAA7D;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AAiBA,CAtBD;;GAAMH,mB;;KAAAA,mB;AAwBN,kCAAeF,KAAK,CAACa,IAAN,CAAWX,mBAAX,CAAf","sourcesContent":["import React, {useState} from \"react\";\n\n//Style Of Component\nimport \"./modificationElement.scss\"\n\nconst ModificationElement = ( { item, insertList} ) => {\n \n  const [ prova, setProva ]= useState( item )\n\n\n\treturn( \n      <div className={\"modification-element\"} >  \n        <input className=\"input name\" type=\"text\" label={prova.name} value={prova.name}  onChange={ (event) => setProva({ ...prova, name: event.target.value }) } />\n        <input className=\"input name\" type=\"text\" label={prova.description} value={prova.description}  onChange={ (event) => setProva({ ...prova, description: event.target.value }) } /> \n        <div className=\"custom-select\" > \n          <select id=\"list-progress\" value={ prova.status } onChange={ (event) => setProva({ ...prova, status: event.target.value }) }> \n            <option value=\"BACKLOG\">backlog</option>\n            <option value=\"TODO\">to do</option>\n            <option value=\"IN PROGRESS\">in progress</option>\n            <option value=\"COMPLETED\">completed</option>\n            <option value=\"IN REVIEW\">in review</option>\n            <option value=\"CLOSED\">closed</option> \n          </select>\n        </div>\n        <button className=\"send-work-list\"  onClick={ ()=> insertList(prova) }></button>\n      </div> \n  )\n}\n\nexport default React.memo(ModificationElement); "]},"metadata":{},"sourceType":"module"}