{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/components/RowList/RowList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RowList = ({\n  item,\n  index,\n  listComplete,\n  setListComplete\n}) => {\n  _s();\n\n  const [modificationElemntView, setModificationElemntView] = useState(-1);\n\n  const deleteElement = index => {\n    const newList = [...listComplete];\n    newList.splice(index, 1);\n    setListComplete(newList);\n  };\n\n  const insertList = (element, index) => {\n    const newList = [...listComplete];\n    newList.splice(index, 1, element);\n    setListComplete(newList);\n    setModificationElemntView(-1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: modificationElemntView !== index ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todolist-list-generator\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"view-table-name\",\n        children: [item.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"view-table-description\",\n        children: [\" \", item.description, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"view-table-status\",\n        children: [\" \", item.status, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-work delete\",\n        onClick: () => deleteElement(index),\n        children: \" DELETE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-work modification\",\n        onClick: () => setModificationElemntView(index),\n        children: \" MODIFICATION \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(ModificationElement, {\n      item: item,\n      insertList: insertList,\n      index: index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(RowList, \"JwK2JKddWOguocBJnI9UhPIkIsw=\");\n\n_c = RowList;\nexport default _c2 = /*#__PURE__*/React.memo(RowList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RowList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/components/RowList/RowList.jsx"],"names":["React","useState","RowList","item","index","listComplete","setListComplete","modificationElemntView","setModificationElemntView","deleteElement","newList","splice","insertList","element","name","description","status","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;;;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA;AAA7B,CAAD,KAAoD;AAAA;;AAEnE,QAAM,CAACC,sBAAD,EAAwBC,yBAAxB,IAAmDP,QAAQ,CAAC,CAAC,CAAF,CAAjE;;AAEC,QAAMQ,aAAa,GAAIL,KAAD,IAAW;AACjC,UAAMM,OAAO,GAAG,CAAC,GAAGL,YAAJ,CAAhB;AACAK,IAAAA,OAAO,CAACC,MAAR,CAAgBP,KAAhB,EAAuB,CAAvB;AACAE,IAAAA,eAAe,CAAEI,OAAF,CAAf;AACA,GAJA;;AAMA,QAAME,UAAU,GAAG,CAAEC,OAAF,EAAWT,KAAX,KAAsB;AACzC,UAAMM,OAAO,GAAG,CAAC,GAAGL,YAAJ,CAAhB;AACAK,IAAAA,OAAO,CAACC,MAAR,CAAgBP,KAAhB,EAAuB,CAAvB,EAAyBS,OAAzB;AACAP,IAAAA,eAAe,CAAEI,OAAF,CAAf;AACEF,IAAAA,yBAAyB,CAAC,CAAC,CAAF,CAAzB;AACD,GALD;;AAOA,sBACE;AAAA,cAEID,sBAAsB,KAAGH,KAAzB,gBACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAA,mBAAqCD,IAAI,CAACW,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,SAAS,EAAC,wBAAjB;AAAA,wBAA6CX,IAAI,CAACY,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA,wBAAyCZ,IAAI,CAACa,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAuC,QAAA,OAAO,EAAG,MAAMP,aAAa,CAACL,KAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAG,MAAMI,yBAAyB,CAACJ,KAAD,CAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,gBAQI,QAAC,mBAAD;AAAqB,MAAA,IAAI,EAAED,IAA3B;AAAiC,MAAA,UAAU,EAAES,UAA7C;AAAyD,MAAA,KAAK,EAAER;AAAhE;AAAA;AAAA;AAAA;AAAA;AAVR,mBADF;AAeD,CAhCD;;GAAMF,O;;KAAAA,O;AAkCN,kCAAeF,KAAK,CAACiB,IAAN,CAAWf,OAAX,CAAf","sourcesContent":["import React, {useState}  from \"react\";\n\n\nconst RowList = ({ item, index ,listComplete, setListComplete }) => { \n\n\tconst [modificationElemntView,setModificationElemntView]=useState(-1 ) \n\n  const deleteElement = (index) => { \n\t\tconst newList = [...listComplete];\n\t\tnewList.splice( index, 1) \n\t\tsetListComplete( newList )\n\t}\n \n  const insertList = ( element, index ) => {\n\t\tconst newList = [...listComplete];\n\t\tnewList.splice( index, 1,element) \n\t\tsetListComplete( newList )\n    setModificationElemntView(-1)\n  }\n\n  return (\n    <>\n      { \n        modificationElemntView!==index\n          ? <div className=\"todolist-list-generator\">\n              <label className=\"view-table-name\">{ item.name } </label>\n              <label className=\"view-table-description\"> { item.description } </label> \n              <label  className=\"view-table-status\"> { item.status } </label>\n              <button className=\"button-work delete\" onClick={ () => deleteElement(index)} > DELETE </button> \n              <button className=\"button-work modification\" onClick={ () => setModificationElemntView(index)} > MODIFICATION </button> \n            </div> \n          : <ModificationElement item={item} insertList={insertList} index={index} />\n      }\n    </>\n  )\n}\n\nexport default React.memo(RowList); "]},"metadata":{},"sourceType":"module"}