{"ast":null,"code":"var _jsxFileName = \"/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/Components/CreationList/ModificationElement/ModificationElement.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //Style Of Component\n\nimport \"./modificationElement.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModificationElement = ({\n  index,\n  listComplete,\n  setListComplete\n}) => {\n  _s();\n\n  const [modWork, setModWork] = useState(listComplete);\n\n  const addElement = id => {\n    setListComplete(modWork);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modification-element\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"view-table-name\",\n      children: [\" \", modWork[index].name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input name\",\n      type: \"text\",\n      label: modWork[index].description,\n      value: modWork.description,\n      onChange: event => setModWork({ ...modWork,\n        description: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"view-table-status\",\n      children: [\" \", modWork[index].status, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-work modification\",\n      onClick: () => addElement(modWork.id),\n      children: \" OK \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ModificationElement, \"1wiMfrI+x9z7y57yF5p5nzQQ+3s=\");\n\n_c = ModificationElement;\nexport default _c2 = /*#__PURE__*/React.memo(ModificationElement);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModificationElement\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/m.europa/Documents/Workspace/My_react/work_to_do_list_make/src/Components/CreationList/ModificationElement/ModificationElement.jsx"],"names":["React","useState","ModificationElement","index","listComplete","setListComplete","modWork","setModWork","addElement","id","name","description","event","target","value","status","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;;AACA,OAAO,4BAAP;;;AAGA,MAAMC,mBAAmB,GAAG,CAAE;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA;AAAvB,CAAF,KAA+C;AAAA;;AAG1E,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAAyBN,QAAQ,CAAEG,YAAF,CAAvC;;AAEC,QAAMI,UAAU,GAAKC,EAAF,IAAU;AAC3BJ,IAAAA,eAAe,CAACC,OAAD,CAAf;AACD,GAFD;;AAID,sBACK;AAAK,IAAA,SAAS,EAAE,sBAAhB;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA,sBAAsCA,OAAO,CAACH,KAAD,CAAP,CAAeO,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,KAAK,EAAEJ,OAAO,CAACH,KAAD,CAAP,CAAeQ,WAAhE;AAA6E,MAAA,KAAK,EAAEL,OAAO,CAACK,WAA5F;AAA0G,MAAA,QAAQ,EAAIC,KAAD,IAAWL,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcK,QAAAA,WAAW,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAAxC,OAAD;AAA1I;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA,sBAAyCR,OAAO,CAACH,KAAD,CAAP,CAAeY,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAA6C,MAAA,OAAO,EAAG,MAAMP,UAAU,CAACF,OAAO,CAACG,EAAT,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AAUA,CAnBD;;GAAMP,mB;;KAAAA,mB;AAqBN,kCAAeF,KAAK,CAACgB,IAAN,CAAWd,mBAAX,CAAf","sourcesContent":["import React, {useState} from \"react\";\n\n//Style Of Component\nimport \"./modificationElement.scss\"\n\n\nconst ModificationElement = ( { index, listComplete, setListComplete} ) => {\n\n \n\tconst [ modWork, setModWork ]= useState( listComplete )\n  \n  const addElement = ( id ) => {\n    setListComplete(modWork)\n  }\n\n\treturn( \n      <div className={\"modification-element\"} >  \n        <label className=\"view-table-name\"> { modWork[index].name } </label>\n\n        <input className=\"input name\" type=\"text\" label={modWork[index].description} value={modWork.description}  onChange={ (event) => setModWork({ ...modWork, description: event.target.value }) } /> \n\n        <label  className=\"view-table-status\"> { modWork[index].status } </label>\n        <button className=\"button-work modification\" onClick={ () => addElement(modWork.id)} > OK </button>  \n      </div> \n  )\n}\n\nexport default React.memo(ModificationElement); "]},"metadata":{},"sourceType":"module"}